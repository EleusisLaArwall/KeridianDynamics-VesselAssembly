//	Adds Ore -> MaterialKits converter to KD-3D-Printer
@PART[KD-3D-Printer]:NEEDS[CommunityResourcePack]{
	@description = This high-tec machinery prints RocketParts and MaterialKits from Metal without any Kerbals required to operate! Not saying an engineer would be useless...
	MODULE,3
	{
		name = ModuleResourceConverter
		ConverterName = MaterialKits
		StartActionName = Start Metal --> MaterialKits
		StopActionName = Stop Metal --> MaterialKits
		AutoShutdown = true
		TemperatureModifier
		{
			key = 0		2000	0	0
			key = 200	2000	0	0
			key = 500	10	0	0
			key = 1000	0	0	0
		}
		GeneratesHeat = true
		DefaultShutoffTemp = .9
		ThermalEfficiency 
		{
			key = 0		1	0	0
			key = 305	1	0	0
			key = 500	0	0	0
		}
		UseSpecialistBonus = true			//	EB*[SBB+(EE*SEF)] ; EE=0-6
		SpecialistEfficiencyFactor = 0.025		//	SEF
		SpecialistBonusBase = 0.85			//	SBB
		ExperienceEffect = ConverterSkill		//	EE (NoSpecialist=0;FiveStarSpecialist=6)
		EfficiencyBonus = 1				//	EB
		INPUT_RESOURCE
		{
			ResourceName = Metal			//	Density(Metal) = 0.039
			Ratio = 0.01367521282
		}
		INPUT_RESOURCE
		{
			ResourceName = ElectricCharge		//	Density(EC) = 0
			Ratio = 30				//	How much Ec is used per second.
		}
		OUTPUT_RESOURCE
		{
			ResourceName = MaterialKits		//	Density(MaterialKits) = 0.001
			Ratio = 0.53333333333			//	Yield = ~100% = 0.5333*0.001/(0.0137*0.039)
			DumpExcess = false
		}
	}
}
//	Adds Metal,Ore -> SpecializedParts converter to KD-3D-Printer
@PART[KD-3D-Printer]:NEEDS[CommunityResourcePack]{
	@description = This high-tec machinery prints RocketParts and MaterialKits from Metal and SpecializedParts from Metal and Ore without any Kerbals required to operate! Not saying an engineer would be useless...
	MODULE,4
	{
		name = ModuleResourceConverter
		ConverterName = SpecializedParts
		StartActionName = Start Metal,Ore --> SpecializedParts
		StopActionName = Stop Metal,Ore --> SpecializedParts
		AutoShutdown = true
		TemperatureModifier
		{
			key = 0		2000	0	0
			key = 200	2000	0	0
			key = 500	10	0	0
			key = 1000	0	0	0
		}
		GeneratesHeat = true
		DefaultShutoffTemp = .9
		ThermalEfficiency 
		{
			key = 0		1	0	0
			key = 305	1	0	0
			key = 500	0	0	0
		}
		UseSpecialistBonus = true			//	EB*[SBB+(EE*SEF)] ; EE=0-6
		SpecialistEfficiencyFactor = 0.075		//	SEF
		SpecialistBonusBase = 0.55			//	SBB
		ExperienceEffect = ConverterSkill		//	EE (NoSpecialist=0;FiveStarSpecialist=6)
		EfficiencyBonus = 1				//	EB
		INPUT_RESOURCE
		{
			ResourceName = Metal			//	Density(Metal) = 0.039
			Ratio = 0.00341880320
		}
		INPUT_RESOURCE
		{
			ResourceName = Ore			//	Density(Ore) = 0.01
			Ratio = 0.00341880320
		}
		INPUT_RESOURCE
		{
			ResourceName = ElectricCharge		//	Density(EC) = 0
			Ratio = 30				//	How much Ec is used per second. 
		}
		OUTPUT_RESOURCE
		{
			ResourceName = SpecializedParts		//	Density(SpecializedParts) = 0.00378
			Ratio = 0.04431781932			//	Yield = ~100% = 0.0443*0.00378/[(0.0034*(0.01+0.039)]
			DumpExcess = false
		}
	}
}
//	Adds Ore -> MaterialKits converter to KD-FabricationContainer
@PART[KD-FabricationContainer]:NEEDS[CommunityResourcePack]{
	@description:NEEDS[Workshop] = Provides Kerbals the ability to fabricate RocketParts, MaterialKits and entire parts. An engineer is required to operate! Also provides a good productivity factor.
	MODULE,3
	{
		name = ModuleResourceConverter
		ConverterName = MaterialKits
		StartActionName = Start Metal --> MaterialKits
		StopActionName = Stop Metal --> MaterialKits
		AutoShutdown = true
		TemperatureModifier
		{
			key = 0		2000	0	0
			key = 200	2000	0	0
			key = 500	10	0	0
			key = 1000	0	0	0
		}
		GeneratesHeat = true
		DefaultShutoffTemp = .9
		ThermalEfficiency 
		{
			key = 0		1	0	0
			key = 305	1	0	0
			key = 500	0	0	0
		}
		UseSpecialistBonus = true			//	EB*[SBB+(EE*SEF)] ; EE=0-6
		SpecialistEfficiencyFactor = 0.166666		//	SEF
		SpecialistBonusBase = 0				//	SBB
		ExperienceEffect = ConverterSkill		//	EE (NoSpecialist=0;FiveStarSpecialist=6)
		EfficiencyBonus = 1				//	EB
		INPUT_RESOURCE
		{
			ResourceName = Metal			//	Density(Metal) = 0.039
			Ratio = 0.0044871795
		}
		INPUT_RESOURCE
		{
			ResourceName = ElectricCharge		//	Density(EC) = 0
			Ratio = 15				//	How much Ec is used per second.
		}
		OUTPUT_RESOURCE
		{
			ResourceName = MaterialKits		//	Density(MaterialKits) = 0.001
			Ratio = 0.175				//	Yield = ~100% = 0.5333*0.001/(0.0137*0.039)
			DumpExcess = false
		}
	}
}
//	Adds Metal,Ore -> SpecializedParts converter to KD-FabricationContainer
@PART[KD-FabricationContainer]:NEEDS[CommunityResourcePack]{
	@description:NEEDS[Workshop] = Provides Kerbals the ability to fabricate RocketParts, MaterialKits, Specializedparts and entire parts. An engineer is required to operate! Also provides a good productivity factor.
	@description:NEEDS[!Workshop] = Provides Kerbals the ability to fabricate RocketParts, MaterialKits and Specializedparts. An engineer is required to operate! Also provides a good productivity factor.
	MODULE,4
	{
		name = ModuleResourceConverter
		ConverterName = SpecializedParts
		StartActionName = Start Metal,Ore --> SpecializedParts
		StopActionName = Stop Metal,Ore --> SpecializedParts
		AutoShutdown = true
		TemperatureModifier
		{
			key = 0		2000	0	0
			key = 200	2000	0	0
			key = 500	10	0	0
			key = 1000	0	0	0
		}
		GeneratesHeat = true
		DefaultShutoffTemp = .9
		ThermalEfficiency 
		{
			key = 0		1	0	0
			key = 305	1	0	0
			key = 500	0	0	0
		}
		UseSpecialistBonus = true			//	EB*[SBB+(EE*SEF)] ; EE=0-6
		SpecialistEfficiencyFactor = 0.166666		//	SEF
		SpecialistBonusBase = 0				//	SBB
		ExperienceEffect = ConverterSkill		//	EE (NoSpecialist=0;FiveStarSpecialist=6)
		EfficiencyBonus = 1				//	EB
		INPUT_RESOURCE
		{
			ResourceName = Metal			//	Density(Metal) = 0.039
			Ratio = 0.00112179487
		}
		INPUT_RESOURCE
		{
			ResourceName = Ore			//	Density(Ore) = 0.01
			Ratio = 0.00112179487
		}
		INPUT_RESOURCE
		{
			ResourceName = ElectricCharge		//	Density(EC) = 0
			Ratio = 15				//	How much Ec is used per second. 
		}
		OUTPUT_RESOURCE
		{
			ResourceName = SpecializedParts		//	Density(SpecializedParts) = 0.00378
			Ratio = 0.01454178541			//	Yield = ~100% = 0.0443*0.00378/[(0.0034*(0.01+0.039)]
			DumpExcess = false
		}
	}
}
//	Adds Dirt -> RareMetals,ExoticMinerals converter to KD-ChemicalReactor
@PART[KD-ChemicalReactor]:NEEDS[CommunityResourcePack]{
	@description ^= :$: Can also extract RareMetals and ExoticMinerals from Dirt.
	MODULE,4
	{
		name = ModuleResourceConverter
		ConverterName = Dirt-->RM+EM
		StartActionName = Start Dirt --> RM+EM
		StopActionName = Stop Dirt --> RM+EM	 
		AutoShutdown = true
		TemperatureModifier
		{
			key = 0 100000
			key = 750 25000
			key = 1000 10000
			key = 1250 500	
			key = 2000 50	
			key = 4000 0
		}
		GeneratesHeat = true
		DefaultShutoffTemp = .8
		ThermalEfficiency 
		{
			key = 0 0 0 0
			key = 400 0.1 0 0
			key = 750 1.0 0 0
			key = 1000 0.1 0 0
			key = 3000 0 0 0 
		}
		UseSpecialistBonus = true			//	EB*[SBB+(EE*SEF)] ; EE=0-6
		SpecialistEfficiencyFactor = 0.05		//	SEF
		SpecialistBonusBase = 0.7			//	SBB
		ExperienceEffect = ScienceSkill			//	EE (NoSpecialist=0;FiveStarSpecialist=6)
		EfficiencyBonus = 1				//	EB
		INPUT_RESOURCE
		{
			ResourceName = Dirt			//	Density(Dirt) = 0.0016
			Ratio = 2.5
			FlowMode = STAGE_PRIORITY_FLOW
  		}
		INPUT_RESOURCE
		{
			ResourceName = ElectricCharge		//	Density(EC) = 0
			Ratio = 20				//	How much Ec is used per second. 
		}
		OUTPUT_RESOURCE
		{
			ResourceName = RareMetals		//	Density(RareMetals) = 0.0078
			Ratio = 0.05				//	Yield = ~10% = 0.05*0.0078/(2.5*0.0016)
			DumpExcess = false
			FlowMode = STAGE_PRIORITY_FLOW
		}
		OUTPUT_RESOURCE
		{
			ResourceName = ExoticMinerals		//	Density(ExoticMinerals) = 0.0025
			Ratio = 0.05				//	Yield = ~3% = 0.05*0.0025/(2.5*0.0016)
			DumpExcess = false
			FlowMode = STAGE_PRIORITY_FLOW
		}
	}
}